{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_blop_employee",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Json1",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "employee_output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Aggregate1"
				},
				{
					"name": "Rank1"
				},
				{
					"name": "Flatten1"
				},
				{
					"name": "Flatten2"
				}
			],
			"script": "source(output(\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\tcompany_name as string,\n\t\taddress as string,\n\t\tcity as string,\n\t\tcounty as string,\n\t\tpostal as string,\n\t\tphone1 as string,\n\t\tphone2 as string,\n\t\temail as string,\n\t\tweb as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tmenu as (id as string, value as string, popup as (menuitem as (value as string, onclick as string)[]))\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> source2\nsource1 aggregate(groupBy(first_name),\n\tcounts = count(),\n\t\tcolumn1 = count(phone1),\n\tpartitionBy('dynamicRange', 2,\n\t\tERROR_FUNCTION('')\n\t)) ~> Aggregate1\nsource1 rank(asc(first_name, true),\n\toutput(rank as long)) ~> Rank1\nAggregate1 foldDown(unroll(),\n\tmapColumn(\n\t\tfirst_name,\n\t\tcounts,\n\t\tcolumn1\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nsource2 foldDown(unroll(satellites),\n\tmapColumn(\n\t\tname,\n\t\tlocation,\n\t\tsatellites,\n\t\tgoods\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten2\nFlatten1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string\n\t),\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}