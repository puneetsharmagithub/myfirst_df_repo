{
	"name": "dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "resource_file",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "ls_ablob_source1989",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "Union1"
				}
			],
			"script": "parameters{\n\tlookup as string (\"lookup*\")\n}\nsource(output(\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\tage as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\t{_col0_} as short,\n\t\t{_col1_} as short,\n\t\t{_col2_} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tcontainer: 'sourcefolder',\n\tcolumnDelimiter: '|',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: false,\n\twildcardPaths:[($lookup)]) ~> source2\nsource1, source2 join(age < {_col1_}\n\t&& age >= {_col0_},\n\tjoinType:'left',\n\tbroadcast: 'right')~> Join1\nJoin1 select(mapColumn(\n\t\tlast_name,\n\t\tfirst_name,\n\t\tage,\n\t\ttype = {_col2_}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 alterRow(insertIf(Select1@first_name==\"Puneet\"),\n\tupdateIf(Select1@first_name==\"Sunny\")) ~> AlterRow1\nAlterRow1 derive(first_name = Select1@first_name,\n\t\ttype = type) ~> DerivedColumn1\nDerivedColumn1 split(DerivedColumn1@first_name==\"puneet\",\n\tdisjoint: false) ~> ConditionalSplit1@(con1, con2)\nConditionalSplit1@con1, source1 union(byName: false)~> Union1"
		}
	}
}